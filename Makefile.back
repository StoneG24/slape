# Makefile to build Go program for the native system and output to the build folder

# Program name (change this to your actual Go file name without the .go extension)
GO_PROGRAM = slape

# Go binary (set this to the Go executable path if needed)
GO = go

# Build flags (you can add your Go build flags here)
GO_BUILD_FLAGS = -o

# Output directory
BUILD_DIR = build
MODEL_DIR = models
 
# The final binary name
OUTPUT_BINARY = $(BUILD_DIR)/$(GO_PROGRAM)

# Default target: build the program for the native system
all: $(BUILD_DIR) $(OUTPUT_BINARY)

# Create the build directory if it doesn't exist
$(BUILD_DIR):
	@echo "Creating build directory..."
	mkdir -p $(BUILD_DIR)
	mkdir -p $(MODEL_DIR)

# Build for the native system and place the binary in the build folder
$(OUTPUT_BINARY):
	@echo "Building for the native system..."
	$(GO) mod tidy
	$(GO) build $(GO_BUILD_FLAGS) $(OUTPUT_BINARY) ./cmd

# Clean up the generated binary and build directory
clean:
	@echo "Cleaning up generated files..."
	rm -rf $(BUILD_DIR)

.PHONY: all clean $(BUILD_DIR)

